{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f9d940d5-200e-4e69-9915-bfd2b0189923",
   "metadata": {},
   "outputs": [],
   "source": [
    "1)\tWho developed python programming language?\n",
    "Ans:- The Python programming language was developed by Guido van Rossum and first released in 1991.\n",
    "2)\tWhich type of programming does python support?\n",
    "Ans :- Python supports multiple programming paradigms, including procedural, object-oriented, and functional programming. Additionally, it has features for supporting aspect-oriented and procedural styles.\n",
    "3)\tIs python case sensitive when dealing with identifiers?\n",
    "Ans:- Yes, Python is case-sensitive when dealing with identifiers, such as variables, functions, and keywords. For example, the names foo and Foo would be considered two different identifiers in Python.\n",
    "4)\tWhat is the correct extension of the python ?\n",
    "Ans - The correct file extension for Python source code files is \".py\".\n",
    "\n",
    "5)\tIs python code complied or interpreted?\n",
    "Ans- Python code is interpreted, not compiled. This means that the code is executed line by line at runtime by the interpreter, rather than being translated into machine code beforehand.\n",
    "\n",
    "6)\tName a few block of code used to define in python language ?\n",
    "Ans - In Python, blocks of code are defined using indentation. Some common blocks of code used in Python include:\n",
    "1.\tFunctions: defined using the \"def\" keyword.\n",
    "2.\tLoops: for loops and while loops.\n",
    "3.\tConditional statements: if-elif-else statements.\n",
    "4.\tClasses: defined using the \"class\" keyword.\n",
    "5.\tContext managers: defined using the \"with\" statement.\n",
    "These blocks of code are used to organize and structure the code, making it easier to understand, maintain and reuse.\n",
    "\n",
    "7)\tState a character used to define in python language. \n",
    "Ans - In Python, the \"#\" symbol is used to define a comment. Any text following a \"#\" symbol on a line is ignored by the interpreter and is used to add notes or explanations within the code.\n",
    "\n",
    "\n",
    "8)\tMention function which can help to us to find the version of python that are we are currently working on ? \n",
    "Ans - You can use the sys module's version attribute to find the version of Python that you are currently working on. Here's an example:\n",
    "pythonCopy code\n",
    "import sys print(sys.version) \n",
    "This will print a string indicating the version of Python, including the major and minor version numbers and any other information about the build or platform.\n",
    "\n",
    "9)\tPython support the creation of anonymous function at runtime using a cinstruct called ? \n",
    "Ans - In Python, anonymous functions can be created at runtime using a construct called \"lambda functions.\" A lambda function is a small, anonymous function that can be defined and used within a single line of code.\n",
    "10)\tWhat does pip stand for python ?\n",
    "Ans -  pip stands for \"Pip Installs Packages.\" It is a package management system for installing and managing packages for the Python programming language. Pip allows you to easily install, upgrade, and manage libraries and dependencies needed for your Python projects. It is the most widely used package manager for Python, and is included with most Python installations by default.\n",
    "11)\tMention a few built in function in python ? \n",
    "Ans - Here are a few commonly used built-in functions in Python:\n",
    "1.\tprint(): prints output to the console\n",
    "2.\tlen(): returns the length of a sequence such as a string or a list\n",
    "3.\tint(): converts a string or a float to an integer\n",
    "4.\tfloat(): converts a string or an integer to a float\n",
    "5.\tstr(): converts an integer or a float to a string\n",
    "6.\tsum(): calculates the sum of a list of numbers\n",
    "7.\tmin(): returns the minimum value of a sequence\n",
    "8.\tmax(): returns the maximum value of a sequence\n",
    "9.\tsorted(): returns a sorted list\n",
    "10.\tabs(): returns the absolute value of a number.\n",
    "These functions can be used out-of-the-box in your Python code, without the need to install any additional packages.\n",
    "\n",
    "\n",
    "\n",
    "12)\tWhat is the maximum possible length of an identifier in python ?\n",
    "Ans - In Python, there is no fixed limit on the length of an identifier (variable name, function name, class name, etc.). However, it is generally recommended to keep identifier names short, descriptive, and meaningful, as longer names can make code more difficult to read and maintain.\n",
    "The maximum length of an identifier is determined by the underlying operating system and file system, which have limits on the length of filenames and directory names. For example, on Windows, the maximum length for a filename is 260 characters, and on most Unix-based systems, it is 255 characters. So, while there is no strict limit, it is a good idea to keep identifier names within these limits for compatibility and portability.\n",
    "\n",
    "13)\tWhat are the benefits of using python ?\n",
    "Ans - There are many benefits to using Python as a programming language, some of which are:\n",
    "1.\tEasy to learn: Python has a simple, intuitive syntax and a focus on readability, making it a great choice for beginners.\n",
    "2.\tVersatile: Python is used for a wide range of applications, including web development, scientific computing, data analysis, artificial intelligence, and more.\n",
    "3.\tLarge ecosystem: Python has a large and active community, which has produced a wealth of libraries, tools, and resources for solving problems and achieving specific goals.\n",
    "4.\tInteroperable: Python can be used in combination with other languages, allowing you to leverage existing code and integrate with other systems and technologies.\n",
    "5.\tHigh-level: Python provides high-level abstractions that allow you to focus on solving problems and writing code, rather than managing low-level details such as memory allocation and garbage collection.\n",
    "6.\tDynamic typing: Python has a dynamic type system, which makes it easy to experiment with and modify code on the fly, and supports rapid prototyping and iteration.\n",
    "Overall, Python's combination of simplicity, power, and versatility make it a popular choice for both hobbyists and professionals alike.\n",
    "\n",
    "14)\tHow is memory managed in python ?\n",
    "Ans In Python, memory management is handled automatically through a system of reference counting and garbage collection.\n",
    "1.\tReference counting: Every object in Python has a reference count, which is the number of references to that object in the current context. When the reference count of an object drops to zero, the object is no longer needed and its memory can be freed.\n",
    "2.\tGarbage collection: To help manage memory more efficiently, Python also includes a garbage collector, which periodically checks for and frees objects that are no longer reachable. The garbage collector works by starting from a set of \"root\" objects (such as variables in the current scope) and following the references between objects to determine which objects are still in use and which are not.\n",
    "In practice, this means that you don't have to worry about freeing memory explicitly in Python, as the memory manager and garbage collector will automatically handle this for you. However, it is still possible to create memory leaks in Python if you are not careful, for example by creating circular references between objects. To avoid this, you should make sure to break any references to objects that are no longer needed, using the del statement or by re-assigning the relevant variables.\n",
    "\n",
    "15)\tHow to install python on windows and set path variables?\n",
    "Ans Here are the steps to install Python on Windows and set the path variables:\n",
    "1.\tDownload Python: Go to the official Python website (https://www.python.org/downloads/) and download the latest version of Python for Windows.\n",
    "2.\tInstall Python: Double-click the downloaded Python installation file and follow the on-screen instructions to install Python on your system. Make sure to select the option to add Python to your system's PATH environment variable.\n",
    "3.\tCheck installation: Open a Command Prompt or Windows Terminal and type the following command to check if Python is installed and to see which version you have installed:\n",
    "\n",
    "16)\tIn indentation required in python ?\n",
    "Ans - In Python, indentation is required for defining code blocks, such as loops, functions, and control structures. The level of indentation determines the scope of the code within a block. This means that the code within a block must be indented consistently and correctly in order to run properly. Indentation helps make the code more readable and maintainable.\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
